<?php

namespace App;

use AlgoliaSearch\Client as AlgoliaClient;

class Algolia
{   
    public static function addFormEntry(FormEntry $formEntry)
    {
        $client = self::getClient();

        // Invalidate cache (so that the data generated is guaranteed to
        // be up-to-date).
        $formEntry->isCacheValid = false;

        // Stores all responses from Algolia.
        $responses = []; 

        // Add each listing to Algolia.
        foreach($formEntry->entrySections as $entrySection) {
            foreach($entrySection->listings as $listing) {
                // Create the search object.
                $searchObject = $formEntry->data;

                // Name of section we're adding.
                $targetSection = $listing->entrySection->formSection->object_key;
        
                // ID that will be used by Algolia to uniquely identify the
                // object.
                $searchObject['objectID'] = $listing
                    ->published_entry_section_id;
        
                // Add the WordPress post ID to the search object. This property
                // can't be generated by `FormEntry::getDataAttribute()` because
                // it is dependent on the WordPress installation it was
                // published to.
                $searchObject['wp_post_id'] = $listing->wp_post_id;
        
                // The target section is added as a single object and not as an
                // array. Code below goes through all the sections to find the
                // matching element and re-adds it back to the search object as
                // an object (discarding the other elements).
                $searchObject['sections'][$targetSection] = array_first(
                    $searchObject['sections'][$targetSection],
                    function($fieldset) use ($listing) {
                        return $fieldset['_meta']['entry_section_id']
                            === $listing->entrySection->id;
                    }
                );
        
                // Add object to Algolia.
                array_push(
                    $responses,
                    $client
                        ->initIndex($listing->formSection->search_index)
                        ->addObject($searchObject)
                );
            }
        }

        return $responses;
    }

    public static function deleteListing(Listing $listing)
    {
        $client = self::getClient();

        return $client
            ->initIndex($listing->formSection->search_index)
            ->deleteObject($listing->published_entry_section_id);
    }

    private static function getClient()
    {
        return new AlgoliaClient(
            env('ALGOLIA_APP_ID'),
            env('ALGOLIA_SECRET')
        );
    }
}
